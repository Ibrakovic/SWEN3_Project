/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.8.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.AuthLoginPostRequest;
import org.openapitools.model.AuthRegisterPostRequest;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-10-05T12:12:53.257010100+02:00[Europe/Vienna]", comments = "Generator version: 7.8.0")
@Validated
@Tag(name = "auth", description = "the auth API")
public interface AuthApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /auth/login : User login
     *
     * @param authLoginPostRequest  (required)
     * @return Login successful (status code 200)
     *         or Unauthorized (status code 401)
     */
    @Operation(
        operationId = "authLoginPost",
        summary = "User login",
        responses = {
            @ApiResponse(responseCode = "200", description = "Login successful"),
            @ApiResponse(responseCode = "401", description = "Unauthorized")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/auth/login",
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Void> authLoginPost(
        @Parameter(name = "AuthLoginPostRequest", description = "", required = true) @Valid @RequestBody AuthLoginPostRequest authLoginPostRequest
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /auth/register : Register a new user
     *
     * @param authRegisterPostRequest  (required)
     * @return User registered successfully (status code 201)
     */
    @Operation(
        operationId = "authRegisterPost",
        summary = "Register a new user",
        responses = {
            @ApiResponse(responseCode = "201", description = "User registered successfully")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/auth/register",
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Void> authRegisterPost(
        @Parameter(name = "AuthRegisterPostRequest", description = "", required = true) @Valid @RequestBody AuthRegisterPostRequest authRegisterPostRequest
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
